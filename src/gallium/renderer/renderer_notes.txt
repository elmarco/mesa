
To use GL 3.x in the renderer we need to handle the deprecated stuff - 

two sided rendering - normals in shader or something - execute shader twice.

non-sprite points - hmm - emulate in guest - render a point to a texture?

wide lines and line stipple,

depth readback

We don't care about these in virgil:

user vertex/index arrays

windowpos

drawpixels/pixelzoom

pixel transfer modes + ops - maps, shift/bias - all avoidable with gallium - 24-bit depth problems.

clamp texture mode

rasteriser state bits that are affected:

fill_front, fill_back - must be the same
poly_stipple_enable
point_quad_rasterization
light_twoside
line_stipple_enable, line_stipple_pattern
clamp_vertex_color
clamp_fragment_color

GL 3.1 deprecated features completed:

alpha test - emulated host shaders.

A8/A16 textures - done in host with swizzles.

polygon stipple - emulated host shaders.

clamping - done in guest TGSI settings.

quads/polygons - done in guest using u_primconvert

