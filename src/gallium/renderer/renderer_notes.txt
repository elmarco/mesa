
To use GL 3.x in the renderer we need to handle the deprecated stuff - 

two sided rendering - normals in shader or something - execute shader twice.

non-sprite points - hmm - emulate in guest - render a point to a texture?

wide lines and line stipple,

depth readback

We don't care about these in virgil:

user vertex/index arrays

windowpos

drawpixels/pixelzoom

pixel transfer modes + ops - maps, shift/bias - all avoidable with gallium - 24-bit depth problems.

clamp texture mode

rasteriser state bits that are affected:

fill_front, fill_back - must be the same
poly_stipple_enable
point_quad_rasterization
light_twoside
line_stipple_enable, line_stipple_pattern
clamp_vertex_color
clamp_fragment_color

GL 3.1 deprecated features completed:

alpha test - emulated host shaders.

A8/A16 textures - done in host with swizzles.

polygon stipple - emulated host shaders.

clamping - done in guest TGSI settings.

quads/polygons - done in guest using u_primconvert

known half-debugged bug:
========================

gl_frontcolor fail in emitting transform feedback - 
./bin/ext_transform_feedback-separate attrib

cubemap array fallback texture is wrong sized
GL 3.2 - 

clear layered rendering - need to handle layered framebuffer bind

geometry shader support - need to handle input/output naming in light of geom shaders.

rgtc and compressed mipmaps - getteximage fails due to blit
not sure how to blit these yet

base instance + draw elements + draw instanced  + instanced arrays
- these seem to be primconvert related - need to see if upstream fixed them
any better.

gl 2.0 edgeflag - edge flags needs to use GL edgeflag interface which we don't handle yet.

piglit tests to definitely investigate:
=======================================

compressed texture readbacks - s3tc/rgtc
some issues with uploading to compressed textures - not sure how to solve it -

done
====
using our own blitter - fixed 3D texture mipmaps and depth texture issues
mipmap generation for 3D textures is broken due to the blitter code not handling it right
we probably should make the renderer blitter use the 3D paths in some cases where glBlitFramebuffer
can't deal. 3D texture and Depth textures
used for scaled MS blits as well if we don't have extension

fixed issue with tex-miplevel-selection shadow requires sampler state

fixed issue with misc colorbufs
